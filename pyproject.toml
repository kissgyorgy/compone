[project]
name = "compone-development"
version = "0.1.0"
description = "Monoproject for development of all compone projects"
license.text = "MIT"
readme = "README.md"
requires-python = ">=3.9"
dependencies = ["compone"]
authors = [{ name = "GyÃ¶rgy Kiss", email = "gyorgy@duck.com" }]

[dependency-groups]
dev = [
    "jinja2>=3.1.5",
    "pytest>=8.3.4",
    "pytest-benchmark>=4.0.0",
    "pytest-icdiff>=0.9",
    "pytest-sugar>=1.0.0",
]
docs = ["mkdocs-material>=9.5.50"]

[tool.uv.sources]
compone = { workspace = true }
compone-stories = { workspace = true }
compone-cli = { workspace = true }
compone-ssg = { workspace = true }
compone-preline = { workspace = true }

[tool.uv.workspace]
members = ["core", "stories", "cli", "ssg", "frameworks/*", "empty"]
exclude = ["core/example_components"]

[tool.ruff.lint]
select = [
    "E",   # pycodestyle error
    "F",   # pyflakes
    "W",   # pycodestyle warning like tab-indentation, trailing-whitespace
    "C90", # mccabe code complexity
    "I",   # isort
]
ignore = [
    "E731", # Do not assign a lambda expression, use a def
]
mccabe = { max-complexity = 5 }
per-file-ignores = { "__init__.py" = ["F401"] }
