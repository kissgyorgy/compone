[tool.poetry]
name = "compone"
version = "0.1.0"
description = "Component framework for Python"
authors = ["Gy√∂rgy Kiss <gyorgy@duck.com>"]
license = "MIT"
readme = "README.md"
package-mode = true
packages = [{ include = "compone", from = "core" }]

[tool.poetry.dependencies]
python = "^3.8"
compone-stories = { path = "./stories", optional = true }

[tool.poetry.extras]
stories = ["compone-stories"]

[tool.poetry.group.dev.dependencies]
pytest = "^7.0"
ruff = "^0.1"
pytest-sugar = "*"
pytest-icdiff = "*"

[tool.ruff]
select = [
    "E",   # pycodestyle error
    "F",   # pyflakes
    "W",   # pycodestyle warning like tab-indentation, trailing-whitespace
    "C90", # mccabe code complexity
    "I",   # isort
]
ignore = [
    "E731", # Do not assign a lambda expression, use a def
]

[tool.ruff.mccabe]
max-complexity = 5

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
